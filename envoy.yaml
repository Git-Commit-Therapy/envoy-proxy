static_resources:
  listeners:
    - name: main_listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                http_filters:
                  # CORS management
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  # GRPC
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

                route_config:
                  name: local_route
                  virtual_hosts:
                    # Frontend
                    - name: frontend
                      domains: ["www.sancommitto.local", "sancommitto.local"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: frontend_service
                      # Auth subdomain
                    - name: auth
                      domains: ["auth.sancommitto.local", "auth.sancommitto.local:80"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: auth_service
                      cors: # Config CORS for 'auth'
                        allow_origin_string_match:
                          - suffix: ".sancommitto.local"
                        allow_methods: "GET, POST, OPTIONS"
                        allow_headers: "authorization, content-type, x-grpc-web, x-user-agent, grpc-timeout, x-requested-with"
                        expose_headers: "authorization, grpc-status, grpc-message"
                        max_age: "86400"
                        allow_credentials: true
                    # Patients backend subdomain
                    - name: backend-patients
                      domains: ["patients.sancommitto.local"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: backend_patients_service
                      cors: # Config CORS for 'backend-patients'
                        allow_origin_string_match:
                          - prefix: "*.sancommitto.local"
                        allow_methods: "GET, POST, OPTIONS"
                        allow_headers: "authorization"
                        expose_headers: "authorization"
                        max_age: "86400"
                        allow_credentials: true

  clusters:
    - name: frontend_service
      # connect_timeout: 1s
      type: STRICT_DNS
      load_assignment:
        cluster_name: frontend_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: react-frontend-service.default.svc.cluster.local
                      port_value: 3000
    - name: auth_service
      # connect_timeout: 1s
      type: STRICT_DNS
      # Without this it goes 502 bad gateway
      http2_protocol_options: {}
      load_assignment:
        cluster_name: auth_service
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: auth-golang-service.default.svc.cluster.local
                    port_value: 443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: "/etc/envoy/certs/tls.crt"
              private_key:
                filename: "/etc/envoy/certs/tls.key"
            validation_context:
              trusted_ca:
                filename: "/etc/envoy/trust/root-certs.pem"
    - name: backend_patients_service
      type: STRICT_DNS
      # Without this it goes 502 bad gateway
      http2_protocol_options: {}
      load_assignment:
        cluster_name: backend_patients_service
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: java-backend-patients-service.default.svc.cluster.local
                    port_value: 443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: "/etc/envoy/certs/tls.crt"
              private_key:
                filename: "/etc/envoy/certs/tls.key"
            validation_context:
              trusted_ca:
                filename: "/etc/envoy/trust/root-certs.pem"
